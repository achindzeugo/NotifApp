// POST: Criticite/Create
[HttpPost]
[ValidateAntiForgeryToken]
public async Task<IActionResult> CreateCriticite(Criticite criticite)
{
    if (ModelState.IsValid)
    {
        // Assurez-vous que le statut est défini par défaut à "Actif"
        criticite.Statut = "Actif";

        // La date de création est déjà initialisée dans le modèle
        _context.Add(criticite);
        await _context.SaveChangesAsync();
        return RedirectToAction(nameof(Index));
    }
    return View(criticite);
}

@model IEnumerable<NotifApps.Models.Criticite>

@{
    ViewData["Title"] = "Liste des Criticités";
}

<h2>Liste des Criticités</h2>

<table class="table table-bordered table-striped">
    <thead class="bg-black text-white">
        <tr>
            <th>#</th>
            <th>Nom</th>
            <th>Couleur</th>
            <th>Description</th>
            <th>Statut</th>
            <th>Date de Création</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var criticite in Model)
        {
            <tr>
                <td>@criticite.CriticiteId</td>
                <td>@criticite.CriticiteNom</td>
                <td>
                    <span style="background-color:@criticite.Couleur; padding:5px; border-radius:4px; color:white;">
                        @criticite.Couleur
                    </span>
                </td>
                <td>@criticite.Descriptions</td>
                <td>
                    @if (criticite.Statut == "Actif")
                    {
                        <span class="badge bg-success">Actif</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary">Inactif</span>
                    }
                </td>
                <td>@criticite.DateCreation.ToString("dd/MM/yyyy")</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@criticite.CriticiteId" class="btn btn-primary btn-sm" title="Modifier">
                        <i class="fas fa-edit"></i>
                    </a>
                    <a asp-action="Delete" asp-route-id="@criticite.CriticiteId" class="btn btn-danger btn-sm" title="Supprimer">
                        <i class="fas fa-trash"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

// GET: Criticite/Index
public async Task<IActionResult> Index()
{
    // Récupère toutes les criticités depuis la base de données
    var criticites = await _context.Criticites.ToListAsync();

    // Vérifie s'il n'y a pas de criticités dans la base
    if (criticites == null || !criticites.Any())
    {
        // Retourne une liste vide si aucune criticité n'est trouvée
        return View(new List<Criticite>());
    }

    // Passe la liste des criticités à la vue
    return View(criticites);
}
