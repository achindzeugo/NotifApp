@model IEnumerable<NotifApps.Models.Applicatif>

<h2 class="">Applicatifs</h2>
<hr />
<div>
    <a asp-action="Create" class="btn btn-black">Créer nouvel Applicatif</a>
</div>
<br />

<div>
    <input type="text" id="searchInput" class="form-control" placeholder="Rechercher par nom d'applicatif...">
    <button type="submit" class="btn btn-black mt-2 fas fa-search"></button>

</div>
<br />

<table class="table table-bordered">
    <thead class="thead-danger bg-danger">
        <tr>
            <th class="bg-black text-white">Noms</th>
            <th class="bg-black text-white">Descriptions</th>
            <th class="bg-black text-white">Liens</th>
            <th class="bg-black text-white">Statut</th>
            <th class="bg-black text-white">Déploiement</th>
            <th class="bg-black text-white">Addresses</th>
            <th class="bg-black text-white">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.AppNom</td>
                <td>@item.Descriptif</td>
                <td><a href="@item.LienWeb" class="text-danger" target="_blank">@item.LienWeb</a></td>
                <td>@item.StatutApplicatifs.StatutNom</td>
                <td>@item.Hebergement</td>


                <td>
                    <ul>
                        @foreach (var address in item.Addresses)
                        {
                            <li>@address.Type: @address.Value</li>
                        }
                    </ul>
                </td>
                <td>
                    <div class="d-flex justify-content-between">
                        <a asp-action="Details" asp-route-id="@item.AppId" class="btn btn-black ms-2 btn-sm" title="Détails"><i class="fas fa-list"></i></a>
                        <a asp-action="Edit" asp-route-id="@item.AppId" class="btn btn-warning ms-2 btn-sm" title="Modifier"><i class="fas fa-edit"></i></a>
                        <button class="btn btn-info ms-2 btn-sm" title="Tester Connectivité" onclick="testConnectivity('@item.AppId')"><i class="fas fa-network-wired"></i></button>
                        <!--<a href="@item.LienWeb" class="text-danger" target="_blank"><i class="fa fa-link mx-4"></i></a>-->
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<style>
    .table {
        border-top-color: red;
        border-top-style: solid;
        border-top-width: 5px;
    }
</style>

<script>
    document.getElementById('searchInput').addEventListener('keyup', function() {
        var searchString = this.value.toLowerCase();
        var rows = document.querySelectorAll('tbody tr');

        rows.forEach(function(row) {
            var appName = row.querySelector('td:first-child').textContent.toLowerCase();
            if (appName.includes(searchString)) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    });



   
</script>

  // INDEX: List of all applicatifs
        public async Task<IActionResult> Index(string searchString)
        {
            var breadcrumb = GetBreadcrumb("Index");
            ViewBag.Breadcrumb = breadcrumb;
            var applicatifs = await _context.Applicatifs
                .Include(a => a.Addresses)
                .Include(i => i.StatutApplicatifs)
                .ToListAsync();

            
            // Handle NULL values if necessary
            foreach (var applicatif in applicatifs)
            {
                
            
                applicatif.StatutApplicatifs = applicatif.StatutApplicatifs ?? new StatutApplicatif();
            }

            if (!string.IsNullOrEmpty(searchString))
            {
                applicatifs = applicatifs.Where(u => u.AppNom.Contains(searchString)).ToList();
            }
            return View(applicatifs);
        }


using System;
using System.Collections.Generic;

#nullable disable

namespace NotifApps.Models
{
    public partial class Applicatif
    {
        public Applicatif()
        {
            Addresses = new HashSet<Address>();
            ApplicationIncidents = new HashSet<ApplicationIncident>();
            EquipeApplicatifs = new HashSet<EquipeApplicatif>();
            Incidents = new HashSet<Incident>();
        }

        public int AppId { get; set; }
        public string AppNom { get; set; }
        public string Descriptif { get; set; }
        public string LienWeb { get; set; }
      /*  public string Statut { get; set; }*/
        public int? EquipeId { get; set; }
        public string? Hebergement { get; set; }
        public int? GroupId { get; set; }

        public int? StatutId { get; set; }


        public virtual ICollection<Address> Addresses { get; set; }
        public virtual ICollection<ApplicationIncident> ApplicationIncidents { get; set; }
        public virtual ICollection<EquipeApplicatif> EquipeApplicatifs { get; set; }
        public virtual ICollection<Incident> Incidents { get; set; }
        public virtual StatutApplicatif StatutApplicatifs { get; set; }

    }
}
