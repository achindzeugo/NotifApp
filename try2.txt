[{"month":1,"count":0},{"month":2,"count":0},{"month":3,"count":0},{"month":4,"count":0},{"month":5,"count":0},{"month":6,"count":0},{"month":7,"count":0},{"month":8,"count":0},{"month":9,"count":0},{"month":10,"count":2},{"month":11,"count":2},{"month":12,"count":1}]























public IActionResult GetMonthlyIncidentData()
{
    var monthlyIncidents = _context.Incidents
        .Where(i => i.Debutdimpact.HasValue) // Ignorer les incidents sans date d'impact
        .GroupBy(i => i.Debutdimpact.Value.Month)
        .Select(g => new
        {
            Month = g.Key,
            Count = g.Count()
        })
        .OrderBy(g => g.Month)
        .ToList();

    // Remplir les mois manquants avec 0
    var incidentCounts = Enumerable.Range(1, 12)
        .Select(month => new
        {
            Month = month,
            Count = monthlyIncidents.FirstOrDefault(x => x.Month == month)?.Count ?? 0
        })
        .ToList();

    return Json(incidentCounts);
}






<div class="col-md-6 ms-2 flex-fill">
    <div class="card">
        <div class="chart-container">
            <canvas id="monthlyChart"></canvas>
        </div>
    </div>
</div>




<script>
    fetch('/Homes/GetMonthlyIncidentData')
        .then(response => response.json())
        .then(data => {
            const labels = data.map(item => {
                const monthNames = [
                    'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',
                    'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'
                ];
                return monthNames[item.Month - 1];
            });
            const counts = data.map(item => item.Count);

            const ctx = document.getElementById('monthlyChart').getContext('2d');
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Incidents par Mois',
                        data: counts,
                        borderColor: 'blue',
                        backgroundColor: 'rgba(0, 0, 255, 0.2)',
                        fill: true
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { display: true },
                        tooltip: { enabled: true }
                    },
                    scales: {
                        x: { title: { display: true, text: 'Mois' } },
                        y: { title: { display: true, text: 'Nombre d\'Incidents' } }
                    }
                }
            });
        })
        .catch(error => console.error('Erreur lors de la récupération des données :', error));
</script>

