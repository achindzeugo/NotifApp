public async Task<IActionResult> Edit(int id)
{
    var equipe = await _context.Equipes
        .Include(e => e.EquipeUtilisateurs)
        .ThenInclude(eu => eu.Utilisateurs)
        .FirstOrDefaultAsync(e => e.EquipeId == id);

    if (equipe == null)
    {
        return NotFound();
    }

    // Obtenez uniquement les utilisateurs déjà associés
    var utilisateursAssocies = equipe.EquipeUtilisateurs.Select(eu => eu.Utilisateurs).ToList();

    // Enregistrez les utilisateurs associés dans ViewBag pour affichage initial
    ViewBag.UtilisateursAssocies = utilisateursAssocies;

    return View(equipe);
}


[HttpPost]
[ValidateAntiForgeryToken]
public async Task<IActionResult> SaveEdit(int equipeId, int[] selectedUsers, string statut, string Descriptions, string NomEquipe)
{
    var equipe = await _context.Equipes
        .Include(e => e.EquipeUtilisateurs)
        .FirstOrDefaultAsync(e => e.EquipeId == equipeId);

    if (equipe == null)
    {
        return NotFound();
    }

    // Mise à jour du nom de l'équipe
    equipe.NomEquipe = NomEquipe;

    // Mise à jour de la description
    equipe.Descriptions = Descriptions;

    // Mise à jour du statut et de la date de désactivation
    if (statut == "Inactif" && equipe.Statut != "Inactif")
    {
        equipe.Statut = "Inactif";
        equipe.DateDesactivation = DateTime.Now;
    }
    else if (statut == "Actif" && equipe.Statut != "Actif")
    {
        equipe.Statut = "Actif";
        equipe.DateDesactivation = null;
    }

    // Mise à jour des utilisateurs associés
    var existingAssociations = equipe.EquipeUtilisateurs.ToList();
    _context.EquipeUtilisateurs.RemoveRange(existingAssociations);

    if (selectedUsers != null)
    {
        foreach (var userId in selectedUsers)
        {
            _context.EquipeUtilisateurs.Add(new EquipeUtilisateur
            {
                EquipeId = equipeId,
                UtilisateursId = userId
            });
        }
    }

    try
    {
        await _context.SaveChangesAsync();
    }
    catch (DbUpdateConcurrencyException)
    {
        if (!_context.Equipes.Any(e => e.EquipeId == equipeId))
        {
            return NotFound();
        }
        throw;
    }

    return RedirectToAction(nameof(Details), new { id = equipeId });
}



@model NotifApps.Models.Equipe

@{
    ViewData["Title"] = "Modifier Équipe";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">Modifier Équipe</h2>

    <form asp-action="SaveEdit" method="post">
        <input type="hidden" name="equipeId" value="@Model.EquipeId" />

        <!-- Champ pour modifier le nom de l'équipe -->
        <div class="form-group">
            <label asp-for="NomEquipe">Nom de l'équipe</label>
            <input asp-for="NomEquipe" class="form-control" />
            <span asp-validation-for="NomEquipe" class="text-danger"></span>
        </div>

        <!-- Champ pour modifier la description -->
        <div class="form-group">
            <label asp-for="Descriptions">Description</label>
            <input asp-for="Descriptions" class="form-control" />
            <span asp-validation-for="Descriptions" class="text-danger"></span>
        </div>

        <!-- Sélection des utilisateurs -->
        <div class="form-group">
            <label>Utilisateurs associés</label>
            <div id="associated-users">
                @foreach (var utilisateur in ViewBag.UtilisateursAssocies)
                {
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" name="selectedUsers" 
                               value="@utilisateur.UtilisateursID" checked />
                        <label class="form-check-label">
                            @utilisateur.NomUtilisateurs @utilisateur.PrenomUtilisateurs
                        </label>
                    </div>
                }
            </div>
        </div>

        <!-- Barre de recherche pour ajouter d'autres utilisateurs -->
        <div class="form-group">
            <label>Recherche d’utilisateurs</label>
            <input type="text" id="search-users" class="form-control" placeholder="Rechercher un utilisateur..." />
            <div id="search-results" class="mt-2"></div>
        </div>

        <!-- Champ pour sélectionner le statut -->
        <div class="form-group">
            <label asp-for="Statut">Statut</label>
            <select asp-for="Statut" class="form-control">
                <option value="Actif" selected>Actif</option>
                <option value="Inactif">Inactif</option>
            </select>
        </div>

        <!-- Date de désactivation (readonly) -->
        <div class="form-group">
            <label>Date de Désactivation</label>
            <input type="text" class="form-control" value="@Model.DateDesactivation?.ToString("yyyy-MM-dd HH:mm:ss")" readonly />
        </div>

        <!-- Boutons d'action -->
        <div class="d-flex justify-content-center">
            <button type="submit" class="btn btn-danger mx-2">
                Enregistrer
            </button>
            <a asp-action="Index" class="btn btn-black mx-2">
                Retour
            </a>
        </div>
    </form>
</div>

<script>
    // Script pour gérer la recherche
    document.getElementById('search-users').addEventListener('input', function () {
        const query = this.value.trim();

        if (query.length > 0) {
            fetch(`/Utilisateurs/Search?query=${query}`)
                .then(response => response.json())
                .then(data => {
                    const results = document.getElementById('search-results');
                    results.innerHTML = '';

                    data.forEach(user => {
                        const div = document.createElement('div');
                        div.className = 'form-check';
                        div.innerHTML = `
                            <input type="checkbox" class="form-check-input" name="selectedUsers" value="${user.utilisateursId}" />
                            <label class="form-check-label">
                                ${user.nomUtilisateurs} ${user.prenomUtilisateurs}
                            </label>`;
                        results.appendChild(div);
                    });
                });
        }
    });
</script>
