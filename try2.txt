<p>
    <button class="btn btn-black" data-bs-toggle="modal" data-bs-target="#createCriticiteModal">
        Ajouter Criticité
    </button>
</p>


<div class="modal fade" id="createCriticiteModal" tabindex="-1" aria-labelledby="createCriticiteLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-black text-white">
                <h5 class="modal-title" id="createCriticiteLabel">Créer une Criticité</h5>
                <button type="button" class="btn-close text-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createCriticiteForm">
                    <div class="form-group">
                        <label for="CriticiteNom" class="form-label">Nom de la Criticité</label>
                        <input id="CriticiteNom" name="CriticiteNom" class="form-control" placeholder="Entrez le nom de la criticité" />
                        <span class="text-danger" id="criticiteNomError"></span>
                    </div>
                    <div class="form-group">
                        <label for="Couleur" class="form-label">Couleur</label>
                        <select id="Couleur" name="Couleur" class="form-control">
                            <option value="">-- Sélectionnez une couleur --</option>
                            <option value="red">Rouge</option>
                            <option value="orange">Orange</option>
                            <option value="yellow">Jaune</option>
                            <option value="blue">Bleu</option>
                            <option value="green">Vert</option>
                            <option value="purple">Violet</option>
                            <option value="pink">Rose</option>
                            <option value="gray">Gris</option>
                            <option value="brown">Marron</option>
                            <option value="cyan">Cyan</option>
                            <option value="lime">Lime</option>
                        </select>
                        <span class="text-danger" id="couleurError"></span>
                    </div>
                    <div class="form-group">
                        <label for="Descriptions" class="form-label">Description</label>
                        <textarea id="Descriptions" name="Descriptions" class="form-control" placeholder="Ajoutez une description si nécessaire"></textarea>
                        <span class="text-danger" id="descriptionError"></span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-black" data-bs-dismiss="modal">Annuler</button>
                <button type="button" id="saveCriticiteBtn" class="btn btn-danger">Enregistrer</button>
            </div>
        </div>
    </div>
</div>



document.getElementById("saveCriticiteBtn").addEventListener("click", function () {
    // Récupérer les données du formulaire
    var formData = {
        CriticiteNom: document.getElementById("CriticiteNom").value,
        Couleur: document.getElementById("Couleur").value,
        Descriptions: document.getElementById("Descriptions").value
    };

    // Vérification des doublons
    fetch('/Criticite/CheckDuplicate', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ CriticiteNom: formData.CriticiteNom })
    })
        .then(response => response.json())
        .then(data => {
            if (data.exists) {
                alert("Une criticité avec ce nom existe déjà !");
            } else {
                // Envoi du formulaire
                fetch('/Criticite/CreateCriticite', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(formData)
                })
                    .then(response => response.json())
                    .then(result => {
                        if (result.success) {
                            alert("Criticité ajoutée avec succès !");
                            location.reload();
                        } else {
                            alert("Erreur lors de la création de la criticité !");
                        }
                    });
            }
        });
});




[HttpPost]
public JsonResult CheckDuplicate(string CriticiteNom)
{
    bool exists = _context.Criticites.Any(c => c.CriticiteNom == CriticiteNom);
    return Json(new { exists });
}

