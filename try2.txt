//Create Origine
[HttpPost]
[ValidateAntiForgeryToken]
public async Task<IActionResult> CreateOrigine(Origine origine)
{
    if (ModelState.IsValid)
    {
        origine.Statut = "Actif"; // Par défaut
        origine.DateCreation = DateTime.Now; // Date de création
        origine.DateDesactivation = null; // Pas encore désactivée
        _context.Add(origine);
        await _context.SaveChangesAsync();
        return RedirectToAction(nameof(Index));
    }
    return View(origine);
}

//Edit Origine
[HttpPost]
[ValidateAntiForgeryToken]
public async Task<IActionResult> EditOrigine(int id, Origine origine)
{
    if (id != origine.OrigineId)
    {
        return NotFound();
    }

    if (ModelState.IsValid)
    {
        try
        {
            var existingOrigine = await _context.Origines.FindAsync(id);
            if (existingOrigine == null)
            {
                return NotFound();
            }

            // Mise à jour des propriétés
            existingOrigine.OrigineNom = origine.OrigineNom;

            // Si le statut change, gérer les dates
            if (existingOrigine.Statut != origine.Statut)
            {
                existingOrigine.Statut = origine.Statut;

                if (origine.Statut == "Inactif")
                {
                    existingOrigine.DateDesactivation = DateTime.Now;
                }
                else
                {
                    existingOrigine.DateDesactivation = null; // Réactivation
                }
            }

            _context.Update(existingOrigine);
            await _context.SaveChangesAsync();
        }
        catch (DbUpdateConcurrencyException)
        {
            if (!OrigineExists(origine.OrigineId))
            {
                return NotFound();
            }
            throw;
        }
        return RedirectToAction(nameof(Index));
    }
    return View(origine);
}

//Vue Edit Origine 
@model NotifApps.Models.Origine

@{
    ViewData["Title"] = "Modifier Origine";
}

<h2>Modifier l'origine</h2>
<hr />

<div class="container mt-5">
    <form asp-action="EditOrigine">
        <input type="hidden" asp-for="OrigineId" />
        <div class="form-group">
            <label asp-for="OrigineNom"></label>
            <input asp-for="OrigineNom" class="form-control" />
            <span asp-validation-for="OrigineNom" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Statut"></label>
            <select asp-for="Statut" class="form-control">
                <option value="Actif" @(Model.Statut == "Actif" ? "selected" : "")>Actif</option>
                <option value="Inactif" @(Model.Statut == "Inactif" ? "selected" : "")>Inactif</option>
            </select>
        </div>
        <div class="form-group">
            <label>Date de création : @Model.DateCreation.ToString("dd/MM/yyyy HH:mm")</label>
        </div>
        <div class="form-group">
            <label>Date de désactivation : 
                @(Model.DateDesactivation.HasValue ? Model.DateDesactivation.Value.ToString("dd/MM/yyyy HH:mm") : "N/A")
            </label>
        </div>
        <div class="text-center mt-4">
            <button type="submit" class="btn btn-warning">Enregistrer</button>
            <a asp-action="Index" class="btn btn-secondary">Annuler</a>
        </div>
    </form>
</div>

//Vue Index 
@model IEnumerable<NotifApps.Models.Origine>

<h2>Liste des origines</h2>
<hr />
<p>
    <a asp-action="CreateOrigine" class="btn btn-primary">Ajouter une origine</a>
</p>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Nom de l'origine</th>
            <th>Statut</th>
            <th>Date de création</th>
            <th>Date de désactivation</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var origine in Model)
        {
            <tr>
                <td>@origine.OrigineNom</td>
                <td>@origine.Statut</td>
                <td>@origine.DateCreation.ToString("dd/MM/yyyy HH:mm")</td>
                <td>@(origine.DateDesactivation.HasValue ? origine.DateDesactivation.Value.ToString("dd/MM/yyyy HH:mm") : "N/A")</td>
                <td>
                    <a asp-action="EditOrigine" asp-route-id="@origine.OrigineId" class="btn btn-warning">Modifier</a>
                    <a asp-action="DeleteOrigine" asp-route-id="@origine.OrigineId" class="btn btn-danger">Supprimer</a>
                </td>
            </tr>
        }
    </tbody>
</table>
