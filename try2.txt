[HttpPost]
[ValidateAntiForgeryToken]
public async Task<IActionResult> CreateCriticite(Criticite criticite, bool forceCreate = false)
{
    if (ModelState.IsValid)
    {
        // Vérification de l'existence d'une criticité avec le même nom
        var existingCriticite = await _context.Criticites
            .FirstOrDefaultAsync(c => c.CriticiteNom == criticite.CriticiteNom);

        if (existingCriticite != null && !forceCreate)
        {
            // Criticité existe déjà, demander confirmation
            ViewBag.ExistingCriticite = true;
            ViewBag.CriticiteNom = criticite.CriticiteNom;
            return View(criticite);
        }

        // Si l'utilisateur confirme ou si aucun doublon n'existe
        criticite.Statut = "Actif";
        if (string.IsNullOrEmpty(criticite.Descriptions))
        {
            criticite.Descriptions = "RAS";
        }

        _context.Add(criticite);
        await _context.SaveChangesAsync();
        return RedirectToAction(nameof(Index));
    }
    return View(criticite);
}



@if (ViewBag.ExistingCriticite != null && (bool)ViewBag.ExistingCriticite)
{
    <div class="modal fade show" tabindex="-1" role="dialog" style="display: block;" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Duplication détectée</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeModal()">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>La criticité avec le nom <strong>@ViewBag.CriticiteNom</strong> existe déjà. Voulez-vous continuer ?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" onclick="closeModal()">Non</button>
                    <form asp-action="CreateCriticite" method="post">
                        <input type="hidden" name="CriticiteNom" value="@Model.CriticiteNom" />
                        <input type="hidden" name="Couleur" value="@Model.Couleur" />
                        <input type="hidden" name="Descriptions" value="@Model.Descriptions" />
                        <input type="hidden" name="forceCreate" value="true" />
                        <button type="submit" class="btn btn-success">Oui</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}







[HttpPost]
[ValidateAntiForgeryToken]
public async Task<IActionResult> CreateCriticite(Criticite criticite)
{
    if (ModelState.IsValid)
    {
        // Vérification de l'existence d'une criticité avec le même nom
        var existingCriticite = await _context.Criticites
            .FirstOrDefaultAsync(c => c.CriticiteNom == criticite.CriticiteNom);

        if (existingCriticite != null)
        {
            // Criticité existe déjà, renvoyer la vue avec une alerte
            ViewBag.ExistingCriticite = true;
            ViewBag.CriticiteNom = criticite.CriticiteNom;
            return View(criticite);
        }

        criticite.Statut = "Actif";
        if (string.IsNullOrEmpty(criticite.Descriptions))
        {
            criticite.Descriptions = "RAS";
        }

        _context.Add(criticite);
        await _context.SaveChangesAsync();
        return RedirectToAction(nameof(Index));
    }
    return View(criticite);
}


<div class="container mt-5">
    <div class="card">
        <div class="card-header bg-black text-white">
            <h4>Créer une Criticité</h4>
        </div>
        <div class="card-body">
            <form asp-action="CreateCriticite">
                <!-- Nom de la Criticité -->
                <div class="form-group">
                    <label asp-for="CriticiteNom" class="form-label">Nom de la Criticité</label>
                    <input asp-for="CriticiteNom" class="form-control" placeholder="Entrez le nom de la criticité" />
                    <span asp-validation-for="CriticiteNom" class="text-danger"></span>
                </div>

                <!-- Couleur -->
                <div class="form-group">
                    <label asp-for="Couleur" class="form-label">Couleur</label>
                    <select asp-for="Couleur" class="form-control">
                        <option value="">-- Sélectionnez une couleur --</option>
                        <option value="red">Rouge</option>
                        <option value="orange">Orange</option>
                        <option value="yellow">Jaune</option>
                        <option value="blue">Bleu</option>
                        <option value="green">Vert</option>
                        <option value="purple">Violet</option>
                        <option value="pink">Rose</option>
                        <option value="gray">Gris</option>
                        <option value="brown">Marron</option>
                        <option value="cyan">Cyan</option>
                        <option value="lime">Lime</option>
                    </select>
                    <span asp-validation-for="Couleur" class="text-danger"></span>
                </div>

                <!-- Description -->
                <div class="form-group">
                    <label asp-for="Descriptions" class="form-label">Description</label>
                    <textarea asp-for="Descriptions" class="form-control" placeholder="Ajoutez une description si nécessaire"></textarea>
                    <span asp-validation-for="Descriptions" class="text-danger"></span>
                </div>

                <!-- Boutons d'action -->
                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-success" title="Créer">
                        <i class="fas fa-save"></i> Enregistrer
                    </button>
                    <a asp-action="Index" class="btn btn-secondary mx-2" title="Annuler">
                        <i class="fas fa-ban"></i> Annuler
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@if (ViewBag.ExistingCriticite != null && (bool)ViewBag.ExistingCriticite)
{
    <div class="modal fade show" tabindex="-1" role="dialog" style="display: block;" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Duplication détectée</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="closeModal()">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>La criticité avec le nom <strong>@ViewBag.CriticiteNom</strong> existe déjà. Voulez-vous continuer ?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" onclick="closeModal()">Non</button>
                    <form asp-action="CreateCriticite" method="post">
                        <input type="hidden" name="CriticiteNom" value="@ViewBag.CriticiteNom" />
                        <input type="hidden" name="forceCreate" value="true" />
                        <button type="submit" class="btn btn-success">Oui</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<script>
    function closeModal() {
        document.querySelector('.modal').style.display = 'none';
    }
</script>

