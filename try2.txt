async function submitForm() {
    const nomEquipe = document.getElementById('NomEquipe').value;
    const descriptions = document.getElementById('Descriptions').value;

    try {
        const response = await fetch(`/Equipe/CheckEquipeExists?nomEquipe=${encodeURIComponent(nomEquipe)}`);
        const exists = await response.json();

        if (exists) {
            if (confirm("L'équipe avec ce nom existe déjà. Voulez-vous continuer ?")) {
                document.getElementById('forceCreate').value = "true";
                document.getElementById('createForm').submit();
            } else {
                document.getElementById('NomEquipeError').innerText = "Nom d'équipe déjà utilisé.";
                var myModal = new bootstrap.Modal(document.getElementById('createModal'));
                myModal.show();
            }
        } else {
            document.getElementById('createForm').submit();
        }
    } catch (error) {
        console.error("Erreur lors de la vérification : ", error);
        alert("Une erreur est survenue. Veuillez réessayer.");
    }
}




public async Task<IActionResult> CheckEquipeExists(string nomEquipe)
{
    try
    {
        var existingEquipe = await _context.Equipes
            .FirstOrDefaultAsync(c => c.NomEquipe == nomEquipe);
        return Json(existingEquipe != null);
    }
    catch (Exception ex)
    {
        // Log l'erreur ici si nécessaire
        return Json(new { success = false, message = "Erreur serveur" });
    }
}



<input id="NomEquipe" name="NomEquipe" class="form-control" placeholder="Entrez un nom" 
       value="@TempData["NomEquipe"]" />
<textarea id="Descriptions" name="Descriptions" class="form-control" 
          placeholder="Ajoutez une description si nécessaire">@TempData["Descriptions"]</textarea>

