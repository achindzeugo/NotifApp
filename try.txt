[HttpPost]
[ValidateAntiForgeryToken]
public async Task<IActionResult> ProcessUpload(int equipeId, IFormFile ExcelFile)
{
    ExcelPackage.LicenseContext = LicenseContext.NonCommercial;

    if (ExcelFile != null && ExcelFile.Length > 0)
    {
        using (var stream = new MemoryStream())
        {
            await ExcelFile.CopyToAsync(stream);
            using (var package = new ExcelPackage(stream))
            {
                var worksheet = package.Workbook.Worksheets.FirstOrDefault();
                if (worksheet != null)
                {
                    // Charger ou attacher l'équipe
                    var equipe = await _context.Equipes.FindAsync(equipeId);
                    if (equipe == null)
                    {
                        return NotFound($"L'équipe avec l'ID {equipeId} n'existe pas.");
                    }

                    for (int row = 2; row <= worksheet.Dimension.End.Row; row++)
                    {
                        var nom = worksheet.Cells[row, 1].Text;
                        var prenom = worksheet.Cells[row, 2].Text;
                        var email = worksheet.Cells[row, 3].Text;
                        var ag = worksheet.Cells[row, 4].Text;

                        // Vérifier si l'utilisateur existe déjà
                        var utilisateur = _context.Utilisateurs
                            .FirstOrDefault(u => u.Email == email);

                        if (utilisateur == null)
                        {
                            utilisateur = new Utilisateurs
                            {
                                NomUtilisateurs = nom,
                                PrenomUtilisateurs = prenom,
                                Email = email,
                                AG = ag
                            };

                            _context.Add(utilisateur);
                            await _context.SaveChangesAsync();
                        }

                        // Associer l'utilisateur à l'équipe
                        var equipeUtilisateur = new EquipeUtilisateur
                        {
                            EquipeId = equipe.EquipeId,
                            UtilisateursId = utilisateur.UtilisateursID
                        };

                        _context.Add(equipeUtilisateur);
                    }

                    await _context.SaveChangesAsync();
                }
            }
        }
        return RedirectToAction(nameof(Details), new { id = equipeId });
    }

    return View();
}
