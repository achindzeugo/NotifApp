using Microsoft.AspNetCore.Mvc;
using NotifApps.Services;
using NotifApps.Models;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;

namespace NotifApps.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class UtilisateursApiController : ControllerBase
    {
        private readonly NotifdbContext _context;

        public UtilisateursApiController(NotifdbContext context)
        {
            _context = context;
        }

        [HttpGet]
        public async Task<ActionResult<IEnumerable<Utilisateur>>> GetUtilisateurs()
        {
            return await _context.Utilisateurs.ToListAsync();
        }
    }
}


using Microsoft.AspNetCore.Mvc;
using NotifApps.Models;
using System.Collections.Generic;
using System.Net.Http;
using System.Net.Http.Json;
using System.Threading.Tasks;

namespace NotifApps.Controllers
{
    public class UtilisateursController : Controller
    {
        private readonly HttpClient _httpClient;

        public UtilisateursController(HttpClient httpClient)
        {
            _httpClient = httpClient;
        }

        public async Task<IActionResult> TryApi()
        {
            var utilisateurs = await _httpClient.GetFromJsonAsync<List<Utilisateur>>("https://localhost:44392/api/UtilisateursApi");
            return View(utilisateurs);
        }
    }
}


using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

#nullable disable

namespace NotifApps.Models
{
    public partial class Utilisateur
    {
        public Utilisateur()
        {
            GroupUtilisateurs = new HashSet<GroupUtilisateur>();
            UtilisateursApplicatifs = new HashSet<UtilisateursApplicatifs>();
        }

        [Key] // Ajout de l'attribut Key pour définir la clé primaire
        public int Utilisateur_ID { get; set; }
        [Required(ErrorMessage = "L'ID est requis.")]
        public string Nom { get; set; }
        [Required(ErrorMessage = "Le nom est requis.")] 
        public string prenom { get; set; }
        [Required(ErrorMessage = "Le prenom est requis.")]
        public string Email { get; set; }
        [Required(ErrorMessage = "L'E mail est requis.")]
/*        public string Service { get; set; }
        [Required(ErrorMessage = "Le service est requis.")]
        public string Matricule { get; set; }
        [Required(ErrorMessage = "Le matricule est requis.")]*/


        public virtual ICollection<GroupUtilisateur> GroupUtilisateurs { get; set; }
        public virtual ICollection<UtilisateursApplicatifs> UtilisateursApplicatifs { get; set; }
    }
}

@model List<NotifApps.Models.Utilisateur>

@{
    ViewData["Title"] = "Utilisateurs";
}

<h2>Liste des Utilisateurs</h2>

<table class="table">
    <thead>
        <tr>
            <th>Nom</th>
            <th>Prénom</th>
            <th>Email</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.Nom</td>
                <td>@user.prenom</td>
                <td>@user.Email</td>
            </tr>
        }
    </tbody>
</table>

