// GET: Create
public IActionResult Create()
{
    // Initialiser les données nécessaires pour la vue
    ViewBag.HebergementOptions = new List<string> { "Centrale", "Locale" };
    ViewBag.AddressTypes = _context.AddressTypes.ToList();
    ViewBag.StatutId = _context.StatutApplicatifs.Select(s => new SelectListItem
    {
        Value = s.StatutId.ToString(),
        Text = s.StatutNom
    }).ToList();

    return View();
}

// POST: Create
[HttpPost]
[ValidateAntiForgeryToken]
public async Task<IActionResult> Create(Applicatif applicatif, List<Address> addresses, bool forceCreate = false)
{
    if (!ModelState.IsValid)
    {
        // Réassigner les données ViewBag en cas d'erreur de validation
        ViewBag.HebergementOptions = new List<string> { "Centrale", "Locale" };
        ViewBag.AddressTypes = _context.AddressTypes.ToList();
        ViewBag.StatutId = _context.StatutApplicatifs.Select(s => new SelectListItem
        {
            Value = s.StatutId.ToString(),
            Text = s.StatutNom
        }).ToList();

        return View(applicatif);
    }

    using (var transaction = await _context.Database.BeginTransactionAsync())
    {
        try
        {
            // Ajouter l'applicatif
            _context.Add(applicatif);
            await _context.SaveChangesAsync();

            // Vérifier l'existence d'un applicatif du même nom
            var existingApplicatif = await _context.Applicatifs
                .FirstOrDefaultAsync(c => c.AppNom == applicatif.AppNom);

            if (existingApplicatif != null && !forceCreate)
            {
                // Si un duplicata est détecté, retourner la vue avec un message
                ViewBag.ExistingApplicatif = true;
                ViewBag.AppNom = applicatif.AppNom;

                ViewBag.HebergementOptions = new List<string> { "Centrale", "Locale" };
                ViewBag.AddressTypes = _context.AddressTypes.ToList();
                ViewBag.StatutId = _context.StatutApplicatifs.Select(s => new SelectListItem
                {
                    Value = s.StatutId.ToString(),
                    Text = s.StatutNom
                }).ToList();

                return View(applicatif);
            }

            // Gérer les adresses associées
            foreach (var address in addresses)
            {
                var existingAddress = await _context.Addresses
                    .FirstOrDefaultAsync(a => a.Type == address.Type && a.Value == address.Value && a.AppId == applicatif.AppId);

                if (existingAddress == null)
                {
                    address.AppId = applicatif.AppId;
                    _context.Addresses.Add(address);
                }
            }
            await _context.SaveChangesAsync();

            // Valider la transaction
            await transaction.CommitAsync();

            return RedirectToAction(nameof(Index));
        }
        catch (Exception)
        {
            // Annuler la transaction en cas d'erreur
            await transaction.RollbackAsync();
            throw;
        }
    }
}

@model NotifApps.Models.Applicatif

@{
    ViewData["Title"] = "Création d'applicatif";
}

<div class="container mt-5">
    <div class="card card">
        <div class="card-header bg-black text-center text-white">
            <h2>Création d'applicatif</h2>
        </div>
        <div class="card-body">
            <form asp-action="Create" method="post">
                <div class="form-group mb-3">
                    <label>Nom</label>
                    <input asp-for="AppNom" class="form-control" placeholder="Entrez un nom" />
                    <span asp-validation-for="AppNom" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label>Description</label>
                    <textarea asp-for="Descriptif" class="form-control" placeholder="Ajoutez une description"></textarea>
                    <span asp-validation-for="Descriptif" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label for="Hebergement">Lieu de déploiement</label>
                    <select name="Hebergement" class="form-control">
                        <option value="">-- Sélectionnez--</option>
                        @if (ViewBag.HebergementOptions != null)
                        {
                            foreach (var hebergement in ViewBag.HebergementOptions)
                            {
                                <option value="@hebergement">@hebergement</option>
                            }
                        }
                    </select>
                </div>

                <div class="form-group mb-3">
                    <label>Lien</label>
                    <input asp-for="LienWeb" class="form-control" placeholder="Entrez un lien" />
                    <span asp-validation-for="LienWeb" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Statut</label>
                    <select asp-for="StatutId" class="form-control" asp-items="ViewBag.StatutId">
                        <option value="">-- Sélectionnez --</option>
                    </select>
                    <span asp-validation-for="StatutId" class="text-danger"></span>
                </div>

                <!-- Dynamic Address Inputs -->
                <div id="address-container">
                    <div class="form-group d-flex align-items-center">
                        <div class="me-2">
                            <label>Type d'adresse</label>
                            <select name="addresses[0].Type" class="form-control">
                                <option value="">-- Sélectionnez --</option>
                                @if (ViewBag.AddressTypes != null)
                                {
                                    foreach (var type in ViewBag.AddressTypes)
                                    {
                                        <option value="@type.TypeName">@type.TypeName</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="me-2">
                            <label>Adresse</label>
                            <input type="text" name="addresses[0].Value" class="form-control" />
                        </div>
                    </div>
                </div>

                <div class="form-group d-flex justify-content-center mt-3">
                    <button type="submit" class="btn btn-danger mx-2">Créer</button>
                    <a asp-action="Index" class="btn btn-secondary mx-2">Annuler</a>
                </div>
            </form>
        </div>
    </div>
</div>



